
/* === AutoGenerated Content === */

function InitScheduleGrid()
{
	for (var i = 0; i < (23-7)*2; i++)
	{
		$(".grid-container").append("<div class='grid-item time' style='grid-row: " + (i*2+2) + "/ span 2; grid-column: 1/1;'>" + ((Math.floor(i/2)+6)%12+1) + ":" + (i%2 ? "30" : "00") + ((i<=9?"am":"pm")) + "</div>");
		for (var j = 0; j < 7; j++)
		{
			$(".grid-container").append("<div class='grid-item space' style='grid-row:" + (i*2+2) + "/ span 2; grid-column: " + (j+2) + "/" + (j+2) + ";'></div>");
		}
	}
}

/* === End AutoGenerated Content === */




/* === Dynamic Element Handlers === */

function AutoCourseNames()
{
	var courseNames = $(".Course").find(".course-name");
	for (var i = 0; i < courseNames.length; i++)
	{
		$(courseNames[i]).attr("placeholder", "Course "+(i+1));
	}
}

function AutoSectionNames()
{
	var courses = $(".Course");
	for (var i = 0; i < courses.length; i++)
	{
		var sectionNames = $(courses[i]).find(".section-name");
		for (var j = 0; j < sectionNames.length; j++)
		{
			$(sectionNames[j]).attr("placeholder", "Section " + (j + 1));
		}
	}
}

var CourseTemplate = $(".CourseTemplate")[0];
function AddCourse()
{
	//generate new element
	var newElem = CourseTemplate.cloneNode(true);
	newElem.className = "Course";
	
	//bind buttons
	$(newElem).find(".sectionAdd").click(AddSection);
	$(newElem).find(".accordionButton").click(AccordionClick);
	$(newElem).find(".courseRemove").click(RemoveCourse);
	
	//add initial children
	AddSectionLoc($(newElem).find(".SectionListContainer"));
	
	//append to list
	$(".CourseListContainer").append(newElem);
	
	AutoCourseNames();
	AutoSectionNames();
}

function RemoveCourse()
{
	var list = $(this).closest(".CourseListContainer");
	$(this).closest(".Course").remove();
	if (list.children().length<=0)
	{
		AddCourse();
	}
	
	AutoCourseNames();
}

var SectionTemplate = $(".SectionTemplate")[0];
function AddSection()
{
	AddSectionLoc($(this).siblings(".SectionListContainer"));

	AutoSectionNames();
}
function AddSectionLoc(location)
{
	//generate new element
	var newElem = SectionTemplate.cloneNode(true);
	newElem.className = "Section";
	
	//bind buttons
	$(newElem).find(".timeSlotAdd").click(AddTimeSlot);
	$(newElem).find(".accordionButton").click(AccordionClick);
	$(newElem).find(".sectionRemove").click(RemoveSection);
	
	//add initial children
	AddTimeSlotLoc($(newElem).find(".TimeSlotListContainer"));
	
	//append to list
	location.append(newElem);
	
}

function RemoveSection()
{
	var list = $(this).closest(".SectionListContainer");
	$(this).closest(".Section").remove();
	if (list.children().length <= 0)
	{
		AddSectionLoc(list);
	}
	
	AutoSectionNames();
}

var TimeSlotTemplate = $(".TimeSlotTemplate")[0];
function AddTimeSlot()
{
	AddTimeSlotLoc($(this).siblings(".TimeSlotListContainer"));
}
function AddTimeSlotLoc(location)
{
	//generate new element
	var newElem = TimeSlotTemplate.cloneNode(true);
	newElem.className = "TimeSlot";
	
	//bind buttons
	$(newElem).find(".timeSlotRemove").click(RemoveTimeSlot);
	$(newElem).find("button.day-button").click(DayButtonClick);
	
	//append to list
	location.append(newElem);
}

function RemoveTimeSlot()
{
	var list = $(this).closest(".TimeSlotListContainer");
	$(this).closest(".TimeSlot").remove();
	if (list.children().length <= 0)
	{
		AddTimeSlotLoc(list);
	}
}

/* === End Dynamic Element Handlers === */




/* === Accordian Handling === */

$(".accordionButton").click(AccordionClick);

function AccordionClick()
{
	this.parentElement.nextElementSibling.classList.toggle("active");
	if (this.parentElement.nextElementSibling.classList.contains("active"))
	{
		this.firstChild.classList.remove("fa-arrow-alt-circle-right")
		this.firstChild.classList.add("fa-arrow-alt-circle-down");
	}
	else
	{
		this.firstChild.classList.remove("fa-arrow-alt-circle-down")
		this.firstChild.classList.add("fa-arrow-alt-circle-right");
	}
}

/* === End Accordian Handling === */




/* === Button Handlers === */

$(".courseAdd").click(AddCourse);

function DayButtonClick()
{
	this.classList.toggle("active");
}

/* === End Button Handlers === */



/* === Schedule Handlers === */

$(".grid-container").mousemove(UpdateMouseLine);

function UpdateMouseLine(event)
{
	$(".mouse-line")[0].style.top=event.clientY-$(".grid-container").position().top;
}

/* === Schedule Handlers === */



/* === Init Items === */

InitScheduleGrid();

AddCourse();

/* === End Init Items === */
